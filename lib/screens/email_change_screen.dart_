import 'package:flutter/material.dart';
import 'package:supabase_flutter/supabase_flutter.dart';
import 'email_change_verification_screen.dart'; // 認証コード入力画面

class EmailChangeScreen extends StatefulWidget {
  @override
  _EmailChangeScreenState createState() => _EmailChangeScreenState();
}

class _EmailChangeScreenState extends State<EmailChangeScreen> {
  final TextEditingController _newEmailController = TextEditingController();
  bool _isLoading = false;
  String _errorMessage = '';

  final supabase = Supabase.instance.client;

  // メールアドレス変更リクエスト
  Future<void> _requestEmailChange() async {
    if (_newEmailController.text.isEmpty) {
      setState(() => _errorMessage = "新しいメールアドレスを入力してください");
      return;
    }

    setState(() => _isLoading = true);
    final newEmail = _newEmailController.text.trim();

    try {
      final response = await supabase.auth.updateUser(
        UserAttributes(email: newEmail),
      );

      if (response.user != null) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("認証コードを送信しました。メールを確認してください。")),
        );

        // 認証コード入力画面へ遷移
        Navigator.pushReplacement(
          context,
          MaterialPageRoute(
            builder: (context) => EmailChangeVerificationScreen(email: newEmail),
          ),
        );
      } else {
        setState(() => _errorMessage = "メールアドレスの変更に失敗しました。");
      }
    } catch (e) {
      print("エラー: ${e.toString()}");
      setState(() => _errorMessage = "エラーが発生しました。もう一度お試しください。");
    } finally {
      setState(() => _isLoading = false);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("メールアドレス変更")),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _newEmailController,
              decoration: InputDecoration(labelText: "新しいメールアドレス"),
            ),
            SizedBox(height: 20),
            if (_errorMessage.isNotEmpty)
              Text(_errorMessage, style: TextStyle(color: Colors.red)),
            SizedBox(height: 10),
            ElevatedButton(
              onPressed: _requestEmailChange,
              child: Text("認証コードを送信"),
            ),
          ],
        ),
      ),
    );
  }
}
